#!/usr/bin/env bash

usage() {
  cat 1>&2 <<EOF
dots
A git wrapper for dotfiles with a few tricks.

USAGE:
    dots [CUSTOM SUBCOMMAND]
    or
    dots [GIT SUBCOMMAND]

CUSTOM SUBCOMMANDS:
    install                 Install new system packages
    setup <packages>...     Run additional setup for system packages
    upgrade <packages>...   Upgrade all packages or specified ones
    dump                    Dump installed packages to list
    patch <patch-file>      Apply a pre-made patch
    open <dotfile>          Open a dotfile in an editor
    web                     Open the repo in the browser
EOF
}

dots-git() { git --git-dir="$HOME/.dotfiles" --work-tree="$HOME" $@; }
run_command() { echo "$1"; eval "$1"; }
macos_command() { [[ "$(uname -s)" =~ "Darwin" ]] && run_command "$1"; }
manjaro_command() { [[ "$(uname -r)" =~ "MANJARO" ]] && run_command "$1"; }

case "$1" in
  -h)
    usage
    ;;
  --help)
    usage
    ;;
  help)
    usage
    ;;
  install)
    macos_command 'brew bundle install --global --no-upgrade --no-lock'
    manjaro_command 'yay -S --needed - < $HOME/.pkglist.txt'
    ;;
  dump)
    macos_command 'brew bundle dump --global --force'
    manjaro_command 'yay -Qqe > $HOME/.pkglist.txt'
    ;;
  upgrade)
    macos_command 'brew upgrade'
    manjaro_command 'yay -Syu'
    ;;
  setup)
    just setup $@
    ;;
  patch)
    dots-git apply $(dots-git ls-files $HOME/.patches | fzf --query "$2" --multi --select-1 --preview="bat --color=always {}")
    ;;
  open)
    $EDITOR "$HOME/$(dots-git ls-files | fzf --query "$2" --select-1 --preview "bat --color=always $HOME/{}")"
    ;;
  web)
    $BROWSER "https://github.com/knowler/dotfiles"
    ;;
  *)
    dots-git $@
    ;;
esac
